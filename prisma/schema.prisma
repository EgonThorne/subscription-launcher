generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String         @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  userPlan      UserPlan?
  conversations Conversation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @id @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model UserPlan {
  id               String   @id @default(cuid())
  userId           String   @unique
  planType         PlanType @default(FREE)
  credits          Int      @default(200)
  lastResetDate    DateTime @default(now())
  nextResetDate    DateTime
  subscriptionDate DateTime @default(now())
  isServiceActive  Boolean  @default(true) // 新字段：表示服务是否处于活动状态
  lastUsageDate    DateTime @default(now()) // 新字段：记录最后一次使用服务的日期

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Conversation {
  id          String   @id @default(cuid())
  userId      String
  content     String
  timestamp   DateTime @default(now())
  creditsUsed Int      @default(1) // 新字段：记录此次对话消耗的积分数

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PlanType {
  FREE
  PREMIUM
}
